{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-actions.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ADD","DELETE","CHANGE_FILTER","defaultContacts","id","name","number","combineReducers","items","state","type","payload","types","filter","rootReducer","contacts","contactsReducer","store","createStore","composeWithDevTools","ContactForm","contact","handleChange","e","console","log","target","setState","prevState","value","isContactExists","toLowerCase","props","find","reset","handleSubmit","preventDefault","onSaveContacts","alert","this","className","s","container","onSubmit","label","input","onChange","btn","Component","connect","dispatch","uuidv4","addContact","contactName","currentTarget","placeholder","filterContactsByName","allContacts","normalizedFilter","toLocaleLowerCase","includes","onDeleteContact","list","map","item","text","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,mJCCbC,EAAM,cACNC,EAAS,iBACTC,EAAgB,uBCDvBC,EAAkB,CACtB,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cA0BjCC,4BAAgB,CAC7BC,MAxBmB,WAAiD,IAAhDC,EAA+C,uDAAvCN,EAAuC,yCAApBO,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACrD,OAAQD,GACN,KAAKE,EACH,MAAM,GAAN,mBAAWH,GAAX,CAAkBE,IAEpB,KAAKC,EACH,OAAOH,EAAMI,QAAO,qBAAGT,KAAgBO,KAEzC,QACE,OAAOF,IAgBXI,OAZoB,WAAoC,IAAnCJ,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzC,OAAQD,GACN,KAAKE,EACH,OAAOD,EAET,QACE,OAAOF,MCzBPK,EAAcP,0BAAgB,CAClCQ,SAAUC,IAUGC,EAPDC,sBAAYJ,EAAaK,iC,sFCDjCC,E,4MACJX,MAAQ,CACNY,QAAS,CAAEhB,KAAM,GAAIC,OAAQ,K,EAO/BgB,aAAe,SAAAC,GACbC,QAAQC,IAAIF,EAAEG,OAAOrB,MACrB,EAAKsB,UAAS,SAAAC,GAAc,IAAD,EACDL,EAAEG,OAAlBrB,EADiB,EACjBA,KAAMwB,EADW,EACXA,MACd,MAAO,CACLR,QAAQ,2BAAMO,EAAUP,SAAjB,kBAA2BhB,EAAOwB,S,EAK/CC,gBAAkB,SAAAzB,GAEhB,OADAA,EAAOA,EAAK0B,cACL,EAAKC,MAAMvB,MAAMM,SAASP,MAAMyB,MACrC,SAAAV,GAAC,OAAIA,EAAElB,KAAK0B,gBAAkB1B,M,EAIlC6B,MAAQ,kBAAM,EAAKP,SAAS,CAAEN,QAAS,CAAEhB,KAAM,GAAIC,OAAQ,O,EAE3D6B,aAAe,SAAAZ,GACbA,EAAEa,iBADgB,IAEVC,EAAmB,EAAKL,MAAxBK,eACAhB,EAAY,EAAKZ,MAAjBY,QACR,EAAKS,gBAAgBT,EAAQhB,MACzBiC,MAAM,WAAD,OAAYjB,EAAQhB,KAApB,qBACLgC,EAAehB,GACnB,EAAKa,S,4CAGP,WAAU,IACAb,EAAYkB,KAAK9B,MAAjBY,QACAC,EAAiBiB,KAAjBjB,aACR,OACE,qBAAKkB,UAAWC,IAAEC,UAAlB,SACE,uBAAMC,SAAUJ,KAAKJ,aAArB,UACE,wBAAOK,UAAWC,IAAEG,MAApB,iBAEE,uBACEJ,UAAWC,IAAEI,MACbnC,KAAK,OACLL,KAAK,OACLwB,MAAOR,EAAQhB,KACfyC,SAAUxB,OAGd,wBAAOkB,UAAWC,IAAEG,MAApB,mBAEE,uBACEJ,UAAWC,IAAEI,MACbnC,KAAK,OACLL,KAAK,SACLwB,MAAOR,EAAQf,OACfwC,SAAUxB,OAId,wBAAQkB,UAAWC,IAAEM,IAAKrC,KAAK,SAA/B,kC,GAjEgBsC,aAgFXC,eANS,SAAAxC,GAAK,MAAK,CAAEA,YAET,SAAAyC,GACzB,MAAO,CAAEb,eAAgB,SAAAhB,GAAO,OAAI6B,ECjFZ,SAAA7B,GAAO,MAAK,CACpCX,KAAME,EACND,QAAS,CACPP,GAAI+C,cACJ9C,KAAMgB,EAAQhB,KACdC,OAAQe,EAAQf,SD4E2B8C,CAAW/B,QAG3C4B,CAA6C7B,G,iBE5D7C6B,eARS,SAAAxC,GAAK,MAAK,CAChCoB,MAAOpB,EAAMM,SAASF,WAGG,SAAAqC,GAAQ,MAAK,CACtCJ,SAAU,SAAAvB,GAAC,OAAI2B,GDPWG,ECOW9B,EAAE+B,cAAczB,MDPX,CAC1CnB,KAAME,EACND,QAAS0C,KAFiB,IAAAA,MCUbJ,EArBA,SAAC,GAAD,IAAGpB,EAAH,EAAGA,MAAOiB,EAAV,EAAUA,SAAV,OACb,gCAEE,uBACEN,UAAWC,IAAEI,MACbnC,KAAK,OACLmB,MAAOA,EACPiB,SAAUA,EACVS,YAAY,+B,gBCWZC,EAAuB,SAACC,EAAa5C,GACzC,IAAM6C,EAAmB7C,EAAO8C,oBAEhC,OAAOF,EAAY5C,QAAO,qBAAGR,KACtBsD,oBAAoBC,SAASF,OAYvBT,eARS,SAAC,GAAD,QAAGlC,SAAYP,EAAf,EAAeA,MAAOK,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5D2C,qBAAsBA,EAAqBhD,EAAOK,OAGzB,SAAAqC,GACzB,MAAO,CAAEW,gBAAiB,SAAAzD,GAAE,OAAI8C,EF1BS,CACzCxC,KAAME,EACND,QEwBuDP,QAG1C6C,EAnCK,SAAC,GAA+C,IAA7CO,EAA4C,EAA5CA,qBAAsBK,EAAsB,EAAtBA,gBAE3C,OACE,oBAAIrB,UAAWC,IAAEqB,KAAjB,SACGN,EAAqBO,KAAI,YAA2B,IAAxB3D,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACrC,OACE,qBAAIkC,UAAWC,IAAEuB,KAAjB,UACE,uBAAMxB,UAAWC,IAAEwB,KAAnB,cAA2B5D,EAA3B,SACA,uBAAMmC,UAAWC,IAAEwB,KAAnB,cAA2B3D,EAA3B,OACA,wBAAQkC,UAAWC,IAAEM,IAAKmB,QAAS,kBAAML,EAAgBzD,IAAzD,sBAH0BA,W,MCNvB,SAAS+D,IACtB,OACE,sBAAK3B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAAC,EAAD,IACA,oBAAIA,UAAU,QAAd,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,OCJN4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUrD,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJsD,SAASC,eAAe,U,kBCd1B1E,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,kBCAzID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,4B","file":"static/js/main.4eca4061.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1xLca\"};","//***Redux***\r\n\r\nexport const ADD = 'contact/add';\r\nexport const DELETE = 'contact/delete';\r\nexport const CHANGE_FILTER = 'contact/changeFilter';\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './contacts-types';\r\n\r\nconst defaultContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst itemsReducer = (state = defaultContacts, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-actions';\r\n\r\nimport s from '../ContactForm/ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    contact: { name: '', number: '' },\r\n  };\r\n\r\n  static propTypes = {\r\n    onSaveContacts: PropTypes.func,\r\n  };\r\n\r\n  handleChange = e => {\r\n    console.log(e.target.name);\r\n    this.setState(prevState => {\r\n      const { name, value } = e.target;\r\n      return {\r\n        contact: { ...prevState.contact, [name]: value },\r\n      };\r\n    });\r\n  };\r\n\r\n  isContactExists = name => {\r\n    name = name.toLowerCase();\r\n    return this.props.state.contacts.items.find(\r\n      e => e.name.toLowerCase() === name,\r\n    );\r\n  };\r\n\r\n  reset = () => this.setState({ contact: { name: '', number: '' } });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { onSaveContacts } = this.props;\r\n    const { contact } = this.state;\r\n    this.isContactExists(contact.name)\r\n      ? alert(`Contact ${contact.name} already exists.`)\r\n      : onSaveContacts(contact);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.state;\r\n    const { handleChange } = this;\r\n    return (\r\n      <div className={s.container}>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={contact.name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={contact.number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button className={s.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({ state });\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { onSaveContacts: contact => dispatch(addContact(contact)) };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\n// ================================= 4 hw =======================================\r\n\r\n// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import s from '../ContactForm/ContactForm.module.css';\r\n\r\n// export default class ContactForm extends Component {\r\n//   static defaultProps = {\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   static propTypes = {\r\n//     contacts: PropTypes.array,\r\n//     name: PropTypes.string,\r\n//     number: PropTypes.string,\r\n//   };\r\n\r\n//   state = {\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   handleChange = (e) => {\r\n//     const { name, value } = e.currentTarget;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.OnSaveContacts(this.state);\r\n//     this.reset();\r\n//   };\r\n\r\n//   reset = () => {\r\n//     this.setState({ name: '', number: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className={s.container}>\r\n//         <form onSubmit={this.handleSubmit}>\r\n//           <label className={s.label}>\r\n//             Name\r\n//             <input\r\n//               className={s.input}\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={this.state.name}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n//           <label className={s.label}>\r\n//             Number\r\n//             <input\r\n//               className={s.input}\r\n//               type=\"text\"\r\n//               name=\"number\"\r\n//               value={this.state.number}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <button className={s.btn} type=\"submit\">\r\n//             Add contact\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport * as types from './contacts-types';\r\n\r\nexport const addContact = contact => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: contact.name,\r\n    number: contact.number,\r\n  },\r\n});\r\n\r\nexport const deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nexport const changeFilter = contactName => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: contactName,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    {/* Find contacts by name: */}\r\n    <input\r\n      className={s.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"Find contacts by name\"\r\n    />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n// ================================= 4 hw =======================================\r\n// ================================= 4 hw =======================================\r\n// ================================= 4 hw =======================================\r\n\r\n// import React from 'react';\r\n// import s from './Filter.module.css';\r\n\r\n// const Filter = ({ value, onChange }) => (\r\n//   <label>\r\n//     {/* Find contacts by name: */}\r\n//     <input\r\n//       className={s.input}\r\n//       type=\"text\"\r\n//       value={value}\r\n//       onChange={onChange}\r\n//       placeholder=\"Find contacts by name\"\r\n//     />\r\n//   </label>\r\n// );\r\n\r\n// export default Filter;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ filterContactsByName, onDeleteContact }) => {\r\n  // console.log(filterContactsByName);\r\n  return (\r\n    <ul className={s.list}>\r\n      {filterContactsByName.map(({ id, name, number }) => {\r\n        return (\r\n          <li className={s.item} key={id}>\r\n            <span className={s.text}> {name} : </span>\r\n            <span className={s.text}> {number} </span>\r\n            <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst filterContactsByName = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLocaleLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  filterContactsByName: filterContactsByName(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { onDeleteContact: id => dispatch(deleteContact(id)) };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\n// ================================= 4 hw =======================================\r\n// ================================= 4 hw =======================================\r\n// ================================= 4 hw =======================================\r\n\r\n// import React from 'react';\r\n// import s from './ContactList.module.css';\r\n\r\n// // import s from '../ContactList/ContactList.module.css';\r\n\r\n// const ContactList = ({ contacts, onDeleteContact }) => {\r\n//   // console.log(contacts);\r\n\r\n//   return (\r\n//     <>\r\n//       <ul className={s.list}>\r\n//         {contacts.map(({ id, name, number }) => (\r\n//           <li className={s.item} key={id}>\r\n//             <span className={s.text}> {name} : </span>\r\n//             <span className={s.text}> {number} </span>\r\n\r\n//             <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n//               Delete\r\n//             </button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ContactList;\r\n","import ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className=\"title\">Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\n// ====================================================================================\r\n// =================================================================================\r\n// ================================= 4 hw =======================================\r\n// import React, { Component } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import ContactForm from './components/ContactForm/ContactForm';\r\n// import Filter from './components/Filter/Filter';\r\n// import ContactList from './components/ContactList/ContactList';\r\n\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// import './App.css';\r\n\r\n// class App extends Component {\r\n//   static defaultProps = {\r\n//     contacts: [],\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   static propTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//       PropTypes.shape({\r\n//         id: PropTypes.string.isRequired,\r\n//         name: PropTypes.string,\r\n//         number: PropTypes.string,\r\n//       }),\r\n//     ),\r\n//   };\r\n\r\n//   state = {\r\n//     contacts: [\r\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ],\r\n//     filter: '',\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     // console.log('App componentDidMount');\r\n\r\n//     const getContacts = localStorage.getItem('contacts');\r\n//     // console.log(getContacts);\r\n\r\n//     const parsedContacts = JSON.parse(getContacts);\r\n//     // console.log(parsedContacts);\r\n\r\n//     if (parsedContacts) {\r\n//       this.setState({ contacts: parsedContacts });\r\n//     }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     console.log('App componentDidUpdate');\r\n\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       console.log('Обновилось поле contacts, записываю contacts в хранилище ');\r\n\r\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n//     }\r\n//   }\r\n\r\n//   formSubmitHandler = data => {\r\n//     const myContacts = {\r\n//       id: uuidv4(),\r\n//       name: data.name,\r\n//       number: data.number,\r\n//     };\r\n\r\n//     // Запрещаем пользователю возможность добавлять контакты,\r\n//     // имена которых уже есть в телефонной книге\r\n\r\n//     const getContacts = this.state.contacts.map(contact =>\r\n//       contact.name.toLocaleLowerCase(),\r\n//     );\r\n\r\n//     const isGetContactAlredy = getContacts.includes(\r\n//       data.name.toLocaleLowerCase(),\r\n//     );\r\n\r\n//     if (isGetContactAlredy) {\r\n//       alert(`${data.name} is already in contacts!`);\r\n//     } else {\r\n//       this.setState(prevState => {\r\n//         return {\r\n//           contacts: [myContacts, ...prevState.contacts],\r\n//         };\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   // Функционал кнопки удаления контакта\r\n\r\n//   deleteContact = contactId => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//     }));\r\n//   };\r\n\r\n//   changeFilter = e => {\r\n//     this.setState({ filter: e.currentTarget.value });\r\n//   };\r\n\r\n//   // берем фтльтр и на базе стейта\r\n//   // составляем и рисуем новую коллекцию\r\n//   getFiltredContacts = () => {\r\n//     const { contacts } = this.state;\r\n\r\n//     const normalizedFilter = this.state.filter.toLowerCase();\r\n\r\n//     // возвращаем только те контакты, свойство \"name\", которых\r\n//     // включает в себя текущее значение фильтра\r\n//     return contacts.filter(contact =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter),\r\n//     );\r\n//   };\r\n\r\n//   render() {\r\n//     const { filter } = this.state;\r\n//     const filtredContacts = this.getFiltredContacts();\r\n//     const totalContactsCount = contacts.length;\r\n\r\n//     return (\r\n//       <>\r\n//         <h1 className=\"title\">Phonebook</h1>\r\n//         <ContactForm OnSaveContacts={this.formSubmitHandler} />\r\n//         <h2 className=\"title\">Contacts</h2>\r\n//         <Filter value={filter} onChange={this.changeFilter} />\r\n\r\n//         {/* <div>\r\n//           <p>All contacts: {totalContactsCount}</p>\r\n//         </div> */}\r\n\r\n//         <ContactList\r\n//           contacts={filtredContacts}\r\n//           onDeleteContact={this.deleteContact}\r\n//         />\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// console.log('Our store: ', store.getState());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3Y8o7\",\"label\":\"ContactForm_label__3uMi1\",\"input\":\"ContactForm_input__1H3B3\",\"btn\":\"ContactForm_btn__2GEMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2RKW3\",\"item\":\"ContactList_item__392xU\",\"text\":\"ContactList_text__2cvfB\",\"btn\":\"ContactList_btn__3qHgx\"};"],"sourceRoot":""}